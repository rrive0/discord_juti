import discord
import requests
import os
from discord.ext import commands
from dotenv import load_dotenv  # type: ignore
from mcrcon import MCRcon  # ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏î‡πâ‡∏ß‡∏¢ `pip install mcrcon`

load_dotenv()
TOKEN = os.getenv("DISCORD_BOT_TOKEN")
RCON_PASSWORD = os.getenv("RCON_PASSWORD")

intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix="n!", intents=intents)

required_role = "chack"  # ‡∏¢‡∏®‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏î‡πâ

servers = {
    "Starcommunity 1": "141.98.19.62",
    "Starcommunity 2": "43.229.76.102",
    "Starcommunity 3": "141.98.19.46",
    "Starcommunity 4": "45.154.27",
    "Starcommunity 5": "43.229.151.105",
    'LAST STUDIO': '31.56.79.17',
    "WHAT TRAINING 1": "146.19.69.171",
    "WHAT TRAINING 2": "146.19.69.172",
    "Summer": "89.38.101.60",
    "Winter": "191.96.93.37",
    "Hyper": "89.38.101.50",
}

PORT = 30120

async def check_server_info(server_ip):
    """ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà """
    try:
        url = f"http://{server_ip}:{PORT}/info.json"
        response = requests.get(url, timeout=5)
        return response.status_code == 200
    except requests.RequestException:
        return False

async def check_players_with_rcon(channel, server_ip, player_id):
    """ ‡πÉ‡∏ä‡πâ RCON ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô (‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ `sv_rcon_password` ‡πÉ‡∏ô server.cfg) """
    try:
        with MCRcon(server_ip, RCON_PASSWORD, port=PORT) as mcr:
            response = mcr.command("status")  # ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
            await channel.send(f"üîç RCON Response: ```{response}```")
    except Exception as e:
        await channel.send(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ RCON: {str(e)}")

async def check_player(channel, server_ip: str, player_id: str):
    try:
        # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if not await check_server_info(server_ip):
            await channel.send(f"‚ùå ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå `{server_ip}` ‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ!")
            return

        url = f"http://{server_ip}:{PORT}/players.json"
        response = requests.get(url, timeout=5)

        if response.status_code == 200:
            try:
                players = response.json()
            except ValueError:
                await channel.send("‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà JSON")
                return
            
            player_data = next((player for player in players if str(player["id"]) == player_id), None)

            if player_data:
                player_name = player_data.get("name", "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô")
                discord_id = next(
                    (identifier.split(":")[1] for identifier in player_data["identifiers"] if identifier.startswith("discord")),
                    None
                )
                steam_hex = next(
                    (identifier for identifier in player_data["identifiers"] if "steam" in identifier),
                    "‡πÑ‡∏°‡πà‡∏û‡∏ö Steam Hex"
                )
                ping = player_data.get("ping", "‡πÑ‡∏°‡πà‡∏û‡∏ö Ping")
                online_count = len(players)

                # ‡πÅ‡∏õ‡∏•‡∏á Steam Hex ‡πÄ‡∏õ‡πá‡∏ô Steam ID 64
                if steam_hex and steam_hex.startswith("steam:"):
                    try:
                        steam_id64 = int(steam_hex.split(":")[1], 16)
                        steam_link = f"https://steamcommunity.com/profiles/{steam_id64}"
                    except ValueError:
                        steam_link = "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏õ‡∏•‡∏á Steam Hex ‡πÄ‡∏õ‡πá‡∏ô Steam ID 64"
                else:
                    steam_link = "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå Steam ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå"

                # Discord User Info
                discord_username = "‡πÑ‡∏°‡πà‡∏û‡∏ö Discord ID"
                discord_mention = "-"
                discord_avatar = None

                if discord_id:
                    try:
                        discord_user = await bot.fetch_user(int(discord_id))
                        discord_username = discord_user.name
                        discord_mention = discord_user.mention
                        discord_avatar = discord_user.avatar.url if discord_user.avatar else None
                    except discord.NotFound:
                        discord_username = "‡πÑ‡∏°‡πà‡∏û‡∏ö Discord ID"
                        discord_mention = "-"
                        discord_avatar = None

                # Embed ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                embed = discord.Embed(
                    title=f"üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå {server_ip}",
                    description=f"**‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå:** {online_count}\n\n",
                    color=discord.Color.blurple()
                )

                player_ip = next(
                    (identifier.split(":")[1] for identifier in player_data["identifiers"] if identifier.startswith("ip:")),
                    "‡πÑ‡∏°‡πà‡∏û‡∏ö IP"
                )

                player_info = (
                    f"**üóíÔ∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô**\n\n"
                    f"**‚õ≥Ô∏è ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô:** {player_name}\n"
                    f"**ü™™ ID:** {player_id}\n"
                    f"**üì° IP Address:** {player_ip}\n"
                    f"**üèì Ping:** {ping} ms\n"
                    f"**üë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ Discord:** {discord_username}\n"
                    f"**üîó Discord Mention:** {discord_mention}\n"
                    f"**üéÆ Steam Hex:** {steam_hex}\n"
                    f"**üåê Steam Profile:** {steam_link}"
                )

                embed.add_field(name="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô", value=player_info, inline=False)

                if discord_avatar:
                    embed.set_thumbnail(url=discord_avatar)

                gif_url = "https://media.discordapp.net/attachments/1260172651578658907/1308675428050931712/Blue_and_Pink_Neon_Thanks_for_Watching_Video_1.gif"
                embed.set_image(url=gif_url)
                embed.set_footer(text=f"‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏î‡∏¢ {channel.guild.name}", icon_url=channel.guild.icon.url)
                embed.set_author(name="FiveM Player Checker", icon_url="https://pluspng.com/logo-img/fi13fiv6efe-fivem-logo-fivem-icon-in-color-style.png")

                await channel.send(embed=embed)
            else:
                await channel.send(f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Player ID: {player_id}")
        else:
            await channel.send(f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå. Status code: {response.status_code}")
    except requests.RequestException as e:
        await channel.send(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠: {str(e)}")

@bot.command(name="p")
@commands.has_role(required_role)
async def check(ctx, player_id: str):
    await ctx.send(f"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô {player_id}")

    if not player_id.isdigit():
        await ctx.send("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å Player ID ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç)")
        return

    class ServerSelect(discord.ui.Select):
        def __init__(self):
            options = [
                discord.SelectOption(label=server_name, value=server_ip)
                for server_name, server_ip in servers.items()
            ]
            super().__init__(placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå", options=options)

        async def callback(self, interaction: discord.Interaction):
            await check_player(ctx.channel, self.values[0], player_id)
            await interaction.response.defer()

    view = discord.ui.View()
    view.add_item(ServerSelect())

    await ctx.send(view=view)
    await ctx.message.delete()


if TOKEN:
    bot.run(TOKEN)
else:
    print("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ DISCORD_BOT_TOKEN ‡πÉ‡∏ô .env")
